[{"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\index.tsx":"1","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\serviceWorker.js":"2","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\getWeb3.js":"3","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\App.new.tsx":"4","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\PetShop\\index.ts":"5","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\PetShop\\App.tsx":"6","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\PetShop\\Pet.tsx":"7","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\shared\\hooks\\useSolidityContract.ts":"8"},{"size":447,"mtime":1612107963639,"results":"9","hashOfConfig":"10"},{"size":5684,"mtime":1612102563336,"results":"11","hashOfConfig":"12"},{"size":1375,"mtime":1612106582603,"results":"13","hashOfConfig":"10"},{"size":2787,"mtime":1612105967290,"results":"14","hashOfConfig":"15"},{"size":33,"mtime":1612107094929,"results":"16","hashOfConfig":"10"},{"size":1634,"mtime":1612109883992,"results":"17","hashOfConfig":"10"},{"size":3019,"mtime":1612113174108,"results":"18","hashOfConfig":"10"},{"size":1879,"mtime":1612111005341,"results":"19","hashOfConfig":"10"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nzi3v2",{"filePath":"22","messages":"23","errorCount":3,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fjhaxs",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wnn53l",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\index.tsx",[],"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\serviceWorker.js",["37","38","39","40","41","42","43","44","45","46","47"],"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\getWeb3.js",["48","49","50"],"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\App.new.tsx",["51","52","53","54","55"],"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\PetShop\\index.ts",[],"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\PetShop\\App.tsx",["56"],"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\PetShop\\Pet.tsx",["57","58"],"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\shared\\hooks\\useSolidityContract.ts",["59","60","61","62","63"],"import { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport getWeb3 from '../../getWeb3';\nimport Adoption from '../../contracts/Adoption.json';\nimport SimpleStorage from '../../contracts/SimpleStorage.json';\n\nconst CONTRACTS = { Adoption, SimpleStorage };\n\nexport default (contractKey: keyof typeof CONTRACTS) => {\n    const [web3, setWeb3] = useState<Web3>();\n    const [account, setAccount] = useState('');\n    const [contract, setContract] = useState<any>();\n\n    useEffect(() => {\n        const rawContract = CONTRACTS[contractKey];\n        (async () => {\n            try {\n                // Get network provider and web3 instance.\n                const web3Instance: Web3 = await getWeb3();\n\n                // Use web3 to get the user's accounts.\n                const [ethAccount] = await web3Instance.eth.getAccounts();\n\n                // Get the contract instance.\n                const networkId = await web3Instance.eth.net.getId();\n                const deployedNetwork = rawContract.networks[`${networkId}` as keyof typeof rawContract.networks];\n                const instance = new web3Instance.eth.Contract(\n                    rawContract.abi as any,\n                    deployedNetwork && deployedNetwork.address,\n                );\n\n                // Set web3, accounts, and contract to the state, and then proceed with an\n                // example of interacting with the contract's methods.\n                setWeb3(web3Instance);\n                setAccount(ethAccount);\n                setContract(instance);\n            } catch (error) {\n                // Catch any errors for any of the above operations.\n                alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n                console.error(error);\n            }\n        })();\n    }, [contractKey]);\n\n    return { account, web3, contract };\n};\n",{"ruleId":"64","severity":1,"message":"65","line":21,"column":8,"nodeType":"66","messageId":"67","endLine":21,"endColumn":33},{"ruleId":"64","severity":1,"message":"68","line":21,"column":26,"nodeType":"69","messageId":"70","endLine":21,"endColumn":32},{"ruleId":"71","severity":2,"message":"72","line":37,"column":17,"nodeType":"69","messageId":"73","endLine":37,"endColumn":40},{"ruleId":"74","severity":1,"message":"75","line":42,"column":21,"nodeType":"76","messageId":"77","endLine":42,"endColumn":32},{"ruleId":"71","severity":2,"message":"78","line":49,"column":17,"nodeType":"69","messageId":"73","endLine":49,"endColumn":32},{"ruleId":"79","severity":2,"message":"80","line":59,"column":13,"nodeType":"69","messageId":"81","endLine":59,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":70,"column":29,"nodeType":"76","messageId":"77","endLine":70,"endColumn":40},{"ruleId":"74","severity":1,"message":"75","line":83,"column":29,"nodeType":"76","messageId":"77","endLine":83,"endColumn":40},{"ruleId":"74","severity":1,"message":"75","line":95,"column":13,"nodeType":"76","messageId":"77","endLine":95,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":118,"column":13,"nodeType":"76","messageId":"77","endLine":118,"endColumn":24},{"ruleId":"64","severity":1,"message":"65","line":122,"column":8,"nodeType":"66","messageId":"67","endLine":122,"endColumn":29},{"ruleId":"64","severity":1,"message":"65","line":3,"column":17,"nodeType":"82","messageId":"67","endLine":3,"endColumn":22},{"ruleId":"74","severity":1,"message":"75","line":23,"column":17,"nodeType":"76","messageId":"77","endLine":23,"endColumn":28},{"ruleId":"74","severity":1,"message":"75","line":30,"column":17,"nodeType":"76","messageId":"77","endLine":30,"endColumn":28},{"ruleId":"83","severity":1,"message":"84","line":8,"column":71,"nodeType":"85","messageId":"86","endLine":8,"endColumn":74,"suggestions":"87"},{"ruleId":"83","severity":1,"message":"84","line":38,"column":46,"nodeType":"85","messageId":"86","endLine":38,"endColumn":49,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":49,"column":13,"nodeType":"91","messageId":"77","endLine":49,"endColumn":92},{"ruleId":"74","severity":1,"message":"75","line":50,"column":13,"nodeType":"76","messageId":"77","endLine":50,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":57,"column":1,"nodeType":"66","messageId":"67","endLine":57,"endColumn":15},{"ruleId":"64","severity":1,"message":"65","line":43,"column":1,"nodeType":"66","messageId":"67","endLine":43,"endColumn":15},{"ruleId":"64","severity":1,"message":"65","line":33,"column":1,"nodeType":"66","messageId":"67","endLine":33,"endColumn":38},{"ruleId":"83","severity":1,"message":"84","line":42,"column":30,"nodeType":"85","messageId":"86","endLine":42,"endColumn":33,"suggestions":"92"},{"ruleId":"64","severity":1,"message":"65","line":9,"column":16,"nodeType":"82","messageId":"67","endLine":9,"endColumn":56},{"ruleId":"83","severity":1,"message":"84","line":12,"column":46,"nodeType":"85","messageId":"86","endLine":12,"endColumn":49,"suggestions":"93"},{"ruleId":"83","severity":1,"message":"84","line":28,"column":40,"nodeType":"85","messageId":"86","endLine":28,"endColumn":43,"suggestions":"94"},{"ruleId":"89","severity":1,"message":"90","line":39,"column":17,"nodeType":"91","messageId":"77","endLine":39,"endColumn":96},{"ruleId":"74","severity":1,"message":"75","line":40,"column":17,"nodeType":"76","messageId":"77","endLine":40,"endColumn":30},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Argument 'config' should be typed.","Identifier","missingArgType","@typescript-eslint/no-use-before-define","'checkValidServiceWorker' was used before it was defined.","noUseBeforeDefine","no-console","Unexpected console statement.","MemberExpression","unexpected","'registerValidSW' was used before it was defined.","no-param-reassign","Assignment to property of function parameter 'registration'.","assignmentToFunctionParamProp","ArrowFunctionExpression","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["95","96"],["97","98"],"no-alert","Unexpected alert.","CallExpression",["99","100"],["101","102"],["103","104"],{"messageId":"105","fix":"106","desc":"107"},{"messageId":"108","fix":"109","desc":"110"},{"messageId":"105","fix":"111","desc":"107"},{"messageId":"108","fix":"112","desc":"110"},{"messageId":"105","fix":"113","desc":"107"},{"messageId":"108","fix":"114","desc":"110"},{"messageId":"105","fix":"115","desc":"107"},{"messageId":"108","fix":"116","desc":"110"},{"messageId":"105","fix":"117","desc":"107"},{"messageId":"108","fix":"118","desc":"110"},"suggestUnknown",{"range":"119","text":"120"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"119","text":"121"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"122","text":"120"},{"range":"122","text":"121"},{"range":"123","text":"120"},{"range":"123","text":"121"},{"range":"124","text":"120"},{"range":"124","text":"121"},{"range":"125","text":"120"},{"range":"125","text":"121"},[268,271],"unknown","never",[1363,1366],[1240,1243],[471,474],[1181,1184]]