[{"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\index.tsx":"1","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\serviceWorker.js":"2","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\getWeb3.js":"3","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\App.new.tsx":"4","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\PetShop\\index.ts":"5","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\PetShop\\App.tsx":"6","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\PetShop\\Pet.tsx":"7","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\shared\\hooks\\useSolidityContract.ts":"8"},{"size":447,"mtime":1612107963639,"results":"9","hashOfConfig":"10"},{"size":5684,"mtime":1612102563336,"results":"11","hashOfConfig":"12"},{"size":1375,"mtime":1612106582603,"results":"13","hashOfConfig":"10"},{"size":2787,"mtime":1612105967290,"results":"14","hashOfConfig":"15"},{"size":33,"mtime":1612107094929,"results":"16","hashOfConfig":"10"},{"size":1634,"mtime":1612109883992,"results":"17","hashOfConfig":"10"},{"size":3016,"mtime":1612119482108,"results":"18","hashOfConfig":"10"},{"size":1861,"mtime":1612119536741,"results":"19","hashOfConfig":"10"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"nzi3v2",{"filePath":"23","messages":"24","errorCount":3,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fjhaxs",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wnn53l",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\index.tsx",[],["41","42","43","44","45","46"],"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\serviceWorker.js",["47","48","49","50","51","52","53","54","55","56","57"],"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\getWeb3.js",["58","59","60"],"import Web3 from 'web3';\r\n\r\nconst getWeb3 = () =>\r\n    new Promise((resolve, reject) => {\r\n        // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n        window.addEventListener('load', async () => {\r\n            // Modern dapp browsers...\r\n            if (window.ethereum) {\r\n                const web3 = new Web3(window.ethereum);\r\n                try {\r\n                    // Request account access if needed\r\n                    await window.ethereum.enable();\r\n                    // Acccounts now exposed\r\n                    resolve(web3);\r\n                } catch (error) {\r\n                    reject(error);\r\n                }\r\n            }\r\n            // Legacy dapp browsers...\r\n            else if (window.web3) {\r\n                // Use Mist/MetaMask's provider.\r\n                const { web3 } = window;\r\n                console.log('Injected web3 detected.');\r\n                resolve(web3);\r\n            }\r\n            // Fallback to localhost; use dev console port by default...\r\n            else {\r\n                const provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545');\r\n                const web3 = new Web3(provider);\r\n                console.log('No web3 instance injected, using Local web3.');\r\n                resolve(web3);\r\n            }\r\n        });\r\n    });\r\n\r\nexport default getWeb3;\r\n",["61","62","63","64","65","66"],"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\App.new.tsx",["67","68","69","70","71"],"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\PetShop\\index.ts",[],"C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\PetShop\\App.tsx",["72"],"import React from 'react';\nimport styled from 'styled-components';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\nimport pets from './pets.json';\nimport Pet from './Pet';\n\ninterface Props {\n    children: React.ReactElement;\n}\n\nconst Grid = styled(Container)`\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 50px;\n\n    .Pet {\n        margin: 20px;\n    }\n`;\n\nfunction HideOnScroll(props: Props) {\n    const { children } = props;\n    // Note that you normally won't need to set the window ref as useScrollTrigger\n    // will default to window.\n    // This is only being set here because the demo is in an iframe.\n    const trigger = useScrollTrigger({});\n\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            {children}\n        </Slide>\n    );\n}\n\nfunction App() {\n    return (\n        <>\n            <CssBaseline />\n            <HideOnScroll>\n                <AppBar>\n                    <Toolbar>\n                        <Typography variant=\"h6\">Pet shop</Typography>\n                    </Toolbar>\n                </AppBar>\n            </HideOnScroll>\n            <Toolbar />\n            <Grid>\n                {pets.map((pet) => (\n                    <Pet key={pet.id} pet={pet} />\n                ))}\n            </Grid>\n        </>\n    );\n}\n\nexport default App;\n","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\PetShop\\Pet.tsx",["73","74"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nimport useSolidityContract from 'shared/hooks/useSolidityContract';\n\ntype ComponentProps = {\n    pet: {\n        id: number;\n        name: string;\n        picture: string;\n        age: number;\n        breed: string;\n        location: string;\n    };\n};\n\nconst StyledMedia = styled(CardMedia)`\n    height: 140px;\n`;\n\nconst StyledCard = styled(Card)`\n    width: 345px;\n`;\n\nfunction Pet({ pet }: ComponentProps) {\n    const { id: petId } = pet;\n    const { account, contract } = useSolidityContract('Adoption');\n    const [adopted, setAdopted] = useState(false);\n    const handleAdopt = () => {\n        contract.methods\n            .adopt(petId)\n            .send({ from: account })\n            .then(() => contract.methods.getAdopters.call())\n            .then(({ call }: any) => call())\n            .then((adopters: string[]) => {\n                for (let i = 0; i < adopters.length; i += 1) {\n                    if (adopters[i] !== '0x0000000000000000000000000000000000000000' && i === petId) {\n                        setAdopted(true);\n                        break;\n                    }\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (contract?.methods?.getAdopters)\n            contract.methods.getAdopters\n                .call()\n                .call()\n                .then((adopters: string[]) => {\n                    for (let i = 0; i < adopters.length; i += 1) {\n                        if (adopters[i] !== '0x0000000000000000000000000000000000000000' && i === petId) {\n                            setAdopted(true);\n                            break;\n                        }\n                    }\n                });\n    }, [contract]);\n\n    return (\n        <StyledCard className=\"Pet\">\n            <CardActionArea>\n                <StyledMedia image={pet.picture} title=\"Contemplative Reptile\" />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {pet.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {`${pet.age} years old `}\n                        <strong>{pet.breed}</strong>\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\" disabled={adopted} onClick={handleAdopt}>\n                    Adopt\n                </Button>\n            </CardActions>\n        </StyledCard>\n    );\n}\n\nexport default Pet;\n","C:\\Users\\xstuk\\Desktop\\projects\\fantasy-x\\dapp\\client\\src\\shared\\hooks\\useSolidityContract.ts",["75","76","77","78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":21,"column":8,"nodeType":"94","messageId":"95","endLine":21,"endColumn":33},{"ruleId":"92","severity":1,"message":"96","line":21,"column":26,"nodeType":"97","messageId":"98","endLine":21,"endColumn":32},{"ruleId":"99","severity":2,"message":"100","line":37,"column":17,"nodeType":"97","messageId":"101","endLine":37,"endColumn":40},{"ruleId":"102","severity":1,"message":"103","line":42,"column":21,"nodeType":"104","messageId":"105","endLine":42,"endColumn":32},{"ruleId":"99","severity":2,"message":"106","line":49,"column":17,"nodeType":"97","messageId":"101","endLine":49,"endColumn":32},{"ruleId":"107","severity":2,"message":"108","line":59,"column":13,"nodeType":"97","messageId":"109","endLine":59,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":70,"column":29,"nodeType":"104","messageId":"105","endLine":70,"endColumn":40},{"ruleId":"102","severity":1,"message":"103","line":83,"column":29,"nodeType":"104","messageId":"105","endLine":83,"endColumn":40},{"ruleId":"102","severity":1,"message":"103","line":95,"column":13,"nodeType":"104","messageId":"105","endLine":95,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":118,"column":13,"nodeType":"104","messageId":"105","endLine":118,"endColumn":24},{"ruleId":"92","severity":1,"message":"93","line":122,"column":8,"nodeType":"94","messageId":"95","endLine":122,"endColumn":29},{"ruleId":"92","severity":1,"message":"93","line":3,"column":17,"nodeType":"110","messageId":"95","endLine":3,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":23,"column":17,"nodeType":"104","messageId":"105","endLine":23,"endColumn":28},{"ruleId":"102","severity":1,"message":"103","line":30,"column":17,"nodeType":"104","messageId":"105","endLine":30,"endColumn":28},{"ruleId":"80","replacedBy":"111"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"112","severity":1,"message":"113","line":8,"column":71,"nodeType":"114","messageId":"115","endLine":8,"endColumn":74,"suggestions":"116"},{"ruleId":"112","severity":1,"message":"113","line":38,"column":46,"nodeType":"114","messageId":"115","endLine":38,"endColumn":49,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":49,"column":13,"nodeType":"120","messageId":"105","endLine":49,"endColumn":92},{"ruleId":"102","severity":1,"message":"103","line":50,"column":13,"nodeType":"104","messageId":"105","endLine":50,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":57,"column":1,"nodeType":"94","messageId":"95","endLine":57,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":43,"column":1,"nodeType":"94","messageId":"95","endLine":43,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":33,"column":1,"nodeType":"94","messageId":"95","endLine":33,"endColumn":38},{"ruleId":"112","severity":1,"message":"113","line":42,"column":30,"nodeType":"114","messageId":"115","endLine":42,"endColumn":33,"suggestions":"121"},{"ruleId":"92","severity":1,"message":"93","line":9,"column":16,"nodeType":"110","messageId":"95","endLine":9,"endColumn":56},{"ruleId":"112","severity":1,"message":"113","line":12,"column":46,"nodeType":"114","messageId":"115","endLine":12,"endColumn":49,"suggestions":"122"},{"ruleId":"112","severity":1,"message":"113","line":28,"column":40,"nodeType":"114","messageId":"115","endLine":28,"endColumn":43,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"119","line":39,"column":17,"nodeType":"120","messageId":"105","endLine":39,"endColumn":96},{"ruleId":"102","severity":1,"message":"103","line":40,"column":17,"nodeType":"104","messageId":"105","endLine":40,"endColumn":30},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["124"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Argument 'config' should be typed.","Identifier","missingArgType","@typescript-eslint/no-use-before-define","'checkValidServiceWorker' was used before it was defined.","noUseBeforeDefine","no-console","Unexpected console statement.","MemberExpression","unexpected","'registerValidSW' was used before it was defined.","no-param-reassign","Assignment to property of function parameter 'registration'.","assignmentToFunctionParamProp","ArrowFunctionExpression",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["125","126"],["127","128"],"no-alert","Unexpected alert.","CallExpression",["129","130"],["131","132"],["133","134"],"padding-line-between-statements",{"messageId":"135","fix":"136","desc":"137"},{"messageId":"138","fix":"139","desc":"140"},{"messageId":"135","fix":"141","desc":"137"},{"messageId":"138","fix":"142","desc":"140"},{"messageId":"135","fix":"143","desc":"137"},{"messageId":"138","fix":"144","desc":"140"},{"messageId":"135","fix":"145","desc":"137"},{"messageId":"138","fix":"146","desc":"140"},{"messageId":"135","fix":"147","desc":"137"},{"messageId":"138","fix":"148","desc":"140"},"suggestUnknown",{"range":"149","text":"150"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"149","text":"151"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"152","text":"150"},{"range":"152","text":"151"},{"range":"153","text":"150"},{"range":"153","text":"151"},{"range":"154","text":"150"},{"range":"154","text":"151"},{"range":"155","text":"150"},{"range":"155","text":"151"},[268,271],"unknown","never",[1363,1366],[1237,1240],[453,456],[1163,1166]]